version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: kafka-discovery-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - kafka-discovery-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-discovery-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
    networks:
      - kafka-discovery-network
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-discovery-ui
    depends_on:
      - kafka
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - kafka-discovery-network

  # Optional: Kafka topic initialization
  kafka-init:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-discovery-init
    depends_on:
      kafka:
        condition: service_healthy
    command: >
      bash -c "
        echo 'Creating Kafka topics...'
        kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic dev-topic --partitions 3 --replication-factor 1
        kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic prod-topic --partitions 3 --replication-factor 1
        kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic staging-topic --partitions 2 --replication-factor 1
        echo 'Topics created successfully!'
        kafka-topics --bootstrap-server kafka:29092 --list
      "
    networks:
      - kafka-discovery-network

networks:
  kafka-discovery-network:
    driver: bridge
